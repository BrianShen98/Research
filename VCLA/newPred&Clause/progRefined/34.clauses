entire sentence: , Take   coffee pot pour into the mug   , ,  Take   spoon from counter scoop the ice cream   , ,  Put ice cream to the mug   ,  Pour syrup to the mug   

<start clause>
start env: 0
end env: 1
sent: Take coffee pot
clause dscr: Take [ coffee pot | relation: Null ]
words: Take coffee pot
verb: Take
arg mapping: 
<end clause>

<start clause>
start env: 2
end env: 1
sent:   pour into the mug  
clause dscr: pour [  mug | relation: Null ]
words: pour mug 
verb: pour
arg mapping: (mug,Mug_1)
<end clause>

<start clause>
start env: 6
end env: 7
sent:  . Take spoon from counter
clause dscr: Take [ spoon | counter | relation: (2, 2){ spoon x counter -> from } ]
words: Take spoon counter from
verb: Take
arg mapping: (spoon,Spoon_1) (counter,Counter_1)
<end clause>

<start clause>
start env: 8
end env: 8
sent:   scoop the ice cream  
clause dscr: scoop [ ice cream | relation: Null ]
words: scoop ice cream
verb: scoop
arg mapping:  (ice cream,IceCream_1)
<end clause>

<start clause>
start env: 13
end env: 12
sent:  . Put ice cream to the mug  
clause dscr: Put [   ice cream |   mug | relation: (2, 2){ ice cream x  mug -> to} ]
words: Put ice cream mug to
verb: Put
arg mapping: (ice cream,IceCream_1) (mug,Mug_1)
<end clause>

<start clause>
start env: 13
end env: 12
sent:  . Pour syrup to the mug  
clause dscr: Pour [   syrup |   mug | relation: (2, 2){ syrup x  mug -> to} ]
words: Pour syrup mug to
verb: Pour
arg mapping: (syrup,Syrup_1) (syrup,Syrup_2) (mug,Mug_1)
<end clause>
