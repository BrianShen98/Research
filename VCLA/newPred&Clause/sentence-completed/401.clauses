entire sentence: , Get all the plates, cups, and spoons on the counters   and put them in the sink   , ,  Take the mug from the microwave   and pour its contents into the sink   and then place it in the sink   , , 

<start clause>
start env: 0
end env: -1
sent: Get all the plates, cups, and spoons on the counters  
clause dscr: Get [   plates |   cups |   spoons |   counters | relation: (4, 4){ plates x  cups -> ,}{ plates x  spoons -> ,}{ plates x  counters -> ,}{ cups x  spoons -> ,}{ cups x  counters -> ,}{ spoons x  counters -> on} ]
words: Get plates cups spoons counters , , , , , on
verb: Get
arg mapping: 
<end clause>

<start clause>
start env: 0
end env: 27
sent:  and put them in the sink  
clause dscr: put [   sink | relation: Null ]
words: put sink
verb: put
arg mapping: (sink,Sink)
<end clause>

<start clause>
start env: 28
end env: 27
sent:  . Take the mug from the microwave  
clause dscr: Take [   mug |   microwave | relation: (2, 2){ mug x  microwave -> from} ]
words: Take mug microwave from
verb: Take
arg mapping: 
<end clause>

<start clause>
start env: 28
end env: 31
sent:  and pour its contents into the sink  
clause dscr: pour [   contents |   sink | relation: (2, 2){ contents x  sink -> into} ]
words: pour contents sink into
verb: pour
arg mapping: (sink,Sink)
<end clause>

<start clause>
start env: 32
end env: 31
sent:  and then place it in the sink  
clause dscr: place [   it |   sink | relation: (2, 2){ it x  sink -> in} ]
words: place it sink in
verb: place
arg mapping: 
<end clause>
